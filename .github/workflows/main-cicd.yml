#==============================================================================
# CI/CD github pipline script: 
#   - run frontend tests
#   - run backend tests
#   - build and publish docker image to DockerHub
#
# This script to work requires the following secrets to be defined:
# - DOCKER_USERNAME : 
# - DOCKER_PASSWORD : 
#
# (c) Agency04 / Domagoj Madunić
#==============================================================================
name: GeodataApp CI/CD
on: 
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
    validation:
        name: "Gradle Wrapper Validation"
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: gradle/wrapper-validation-action@v1
    pipeline:
        name: CI/CD pipeline
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
        timeout-minutes: 20
        env:
            NODE_VERSION: 16.13.0
            SPRING_OUTPUT_ANSI_ENABLED: DETECT
            SPRING_JPA_SHOW_SQL: false
            JHI_DISABLE_WEBPACK_LOGS: true
            DEPLOYMENT_NAME: geodata-app-deployment
            #KUBE_SERVER: https://740e865b-b00f-4e42-970f-67c87c1c634d.k8s.ondigitalocean.com
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: 16.13.0
            - uses: actions/setup-java@v1
              with:
                  java-version: '11.x'
            - name: Install node.js packages
              id: install-node-js
              run: npm install
            - name: Run backend test
              id: backend-tests
              run: |
                  chmod +x gradlew
                  ./gradlew clean test integrationTest
            - name: Run frontend test
              id: frontend-tests
              run: npm run test
            - name: Build and publish docker image (latest)
              id: docker-build-push-latest
              if: github.event_name == 'push' || github.event.pull_request.merged == 'true'
              run: |
                  ./gradlew jib -PimageVersion=latest -Djib.to.auth.username="${{ secrets.DOCKER_USERNAME }}" -Djib.to.auth.password="${{ secrets.DOCKER_PASSWORD }}" -Pprod
            - name: Tagg check
              if: startsWith(github.ref, 'refs/tags/')
              run: echo "Detected tag ${{ github.ref }}"
            - name: Build and publish docker image (release)
              id: docker-build-push-release
              if: (github.event_name == 'push' || github.event.pull_request.merged == 'true') && startsWith(github.ref, 'refs/tags/')
              run: |
                  ./gradlew jib -Djib.to.auth.username="${{ secrets.DOCKER_USERNAME }}" -Djib.to.auth.password="${{ secrets.DOCKER_PASSWORD }}" -Pprod
      